<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImageVault.EPiServer.Common</name>
    </assembly>
    <members>
        <member name="T:ImageVault.EPiServer.Common.Handlers.NonMappingRoute">
            <summary>
            Creates a one way route that only maps from an url to a handler.
            Never from  route values to an url.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Handlers.NonMappingRoute.#ctor(System.String,System.Web.Routing.IRouteHandler)">
            <summary>
            Initializes a new instance of the <b>NonMappingRoute</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Handlers.NonMappingRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <inheritdoc/>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Handlers.RestHandler">
            <summary>
            Summary description for RestHandler.
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Handlers.RestHandler.PathFolderName">
            <summary>
            The name of the folder where the handler should be initiated
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Handlers.RestHandler.#ctor">
            <summary>
            Initializes a new instance of the <b>RestHandler</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Handlers.RestHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>RestHandler</b> class.
            </summary>
            <param name="path"></param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> is null.</exception>
            <exception cref="T:System.ArgumentException">If the supplied path cannot start with any of the following characters; .</exception>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Helpers.IEPiServerSettings">
            <summary>
            The IEPiServerSettings interface is a helper interface to incorporate the EPiServer.Settings class
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.IEPiServerSettings.SiteUrl">
            <summary>
            Gets the SiteUrl of the IEPiServerSettings
            </summary>
            <value></value>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase">
            <summary>
            Base class for the ScriptHelper classes.
            </summary>
            <remarks></remarks>
            <example></example>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.OpenImageVaultJsKey">
            <summary>
            Gets the OpenImageVaultJsKey of the <see cref="T:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.Providername">
            <summary>
            Gets the Provider name of the <see cref="T:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.DefaultImage">
            <summary>
            Gets the DefaultImage of the <see cref="T:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase"/>
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.ImageVaultUrl">
            <summary>
            Gets the ImageVaultUrl of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.ImageVaultUiIsExternal">
            <summary>
            Gets the ImageVaultUiIsExternal of the ScriptHelperBase
            </summary>
            <value>True if Ui is external (ie not on /ImageVault)</value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.ImageVaultUiAuthUrl">
            <summary>
            Gets the ImageVaultUiAuthUrl of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.ImageVaultCoreProxyUrl">
            <summary>
            Gets the ImageVaultCoreProxyUrl of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.EditorUrl">
            <summary>
            Gets the EditorUrl of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.EPiServerCommonPath">
            <summary>
            Gets the EPiServerCommonPath of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.IdpVppVirtualPath">
            <summary>
            Gets the IdpVppVirtualPath of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.DefaultIconUrl">
            <summary>
            Gets the DefaultIconUrl of the ScriptHelper
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.RequestUrl">
            <summary>
            Gets the left part of the current request url
            </summary>
            <remarks>We cannot use the SiteUrl of the episerver site directly since we want to keep the url from the request to support multiple website addresses.</remarks>
            <value></value>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.#ctor(ImageVault.EPiServer.Common.Helpers.IEPiServerSettings,ImageVault.Common.Lib.Web.IHttpContextBaseFactory)">
            <summary>
            Initializes a new instance of the <b>ScriptHelperBase</b> class.
            </summary>
            <param name="ePiServerSettings"></param>
            <param name="httpContextBaseFactory"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.Translate(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.GetImageVaultUiUrl(System.String)">
            <summary>
            Gets the Uri to the ImageVaultUI
            </summary>
            <param name="pageLangId"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.GetImageVaultUiInsertUrl(System.String)">
            <summary>
            Gets the Uri for the ImageVaultUi insert dialog
            </summary>
            <param name="pageLangId"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.GenerateStyleLinkForSource(System.String)">
            <summary>
            
            </summary>
            <param name="relativeCssPath"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.GenerateScriptForSource(System.String)">
            <summary>
            Generates a script tag with the supplied src attribute
            </summary>
            <param name="relativeScriptPath">The relative script path (from the vpp path)</param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.GenerateTagForSource(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tag"></param>
            <param name="relativePath"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Helpers.ScriptHelperBase.QuoteString(System.String)">
            <summary>
            Surrounds the supplied string with single quot characters and escapes the supplied string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.IReadOnlyItem`1">
            <summary>
            Summary description for IReadOnlyItem.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ImageVault.EPiServer.Common.IReadOnlyItem`1.IsReadOnly">
            <summary>
            Checks if the item is readonly or not
            </summary>
            <value></value>
        </member>
        <member name="M:ImageVault.EPiServer.Common.IReadOnlyItem`1.CreateWritableClone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.IReadOnlyItem`1.MakeReadOnly">
            <summary>
            Makes the instance readonly.
            </summary>
        </member>
        <member name="T:ImageVault.EPiServer.Common.MediaCacheItem">
            <summary>
            This class represents the cached media that is passed between the backend PropertyMedia controls and frontent javascript 
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.Id">
            <summary>
            Get/Sets the Id of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.Original">
            <summary>
            Get/Sets the Original of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.Thumb">
            <summary>
            Get/Sets the Thumb of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.VaultId">
            <summary>
            Get/Sets the VaultId of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.VaultRole">
            <summary>
            Get/Sets the VaultRole of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="F:ImageVault.EPiServer.Common.MediaCacheItem.MediaSerializerSettings">
            <summary>
            Gets the MediaSerializerSettings of the <see cref="T:ImageVault.EPiServer.Common.MediaCacheItem"/>
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.OriginalFormatContentType">
            <summary>
            Get/Sets the OriginalContentType of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaCacheItem.OriginalFormatUrl">
            <summary>
            Get/Sets the OriginalVideoUrl of the MediaCacheItem
            </summary>
            <value></value>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.#cctor">
            <summary>
            Initializes a new instance of the <b>MediaReference</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.#ctor">
            <summary>
            Initializes a new instance of the <b>MediaCacheItem</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.#ctor(System.Int32,System.Int32,ImageVault.Common.Data.Media,ImageVault.Common.Data.Media,System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>MediaCacheItem</b> class.
            </summary>
            <param name="id"></param>
            <param name="vaultId"></param>
            <param name="thumbMedia"></param>
            <param name="originalMedia"></param>
            <param name="originalFormatContentType"></param>
            <param name="originalFormatUrl"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:ImageVault.EPiServer.Common.MediaCacheItem"/>.
            </summary>
            <remarks>Serializes the instance as json</remarks>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:ImageVault.EPiServer.Common.MediaCacheItem"/>.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.Parse(System.String)">
            <summary>
            Parses the supplied json string to a MediaCacheItem instance
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.ParseList(System.String)">
            <summary>
            Parses the supplied json and returns a list of <see cref="T:ImageVault.EPiServer.Common.MediaCacheItem"/>s
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.ToJson(System.Collections.Generic.List{ImageVault.EPiServer.Common.MediaCacheItem})">
            <summary>
            Converts a list of <see cref="T:ImageVault.EPiServer.Common.MediaCacheItem"/> to json
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.MediaCacheItem.MediaCacheItemContractResolver">
            <summary>
            This class is a helper class that handles which properties that should be serialized on the MediaCacheItem instance
            </summary>
            <remarks>Will remove all properties that is not necessary</remarks>
            <example></example>
        </member>
        <member name="F:ImageVault.EPiServer.Common.MediaCacheItem.MediaCacheItemContractResolver.PropertiesToKeep">
            <summary>
            Gets the PropertiesToKeep of the <see cref="T:ImageVault.EPiServer.Common.MediaCacheItem.MediaCacheItemContractResolver"/>
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaCacheItem.MediaCacheItemContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.MediaFormatUtil">
            <summary>
            Utility class for handling MediaFormats
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaFormatUtil.GetThumbnailFormatWithEffects(ImageVault.Common.Data.Effects.Effect[])">
            <summary>
            Gets a thumbnail format with the supplied effects.
            </summary>
            <param name="effects"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaFormatUtil.GetThumbnailFormatWithEffects(System.Collections.Generic.IList{ImageVault.Common.Data.Effects.Effect})">
            <summary>
            Gets a thumbnail format with the supplied effects.
            </summary>
            <param name="effects"></param>
            <returns></returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.MediaReferenceBase">
            <summary>
            This class describes the data stored in the PropertyMedia and is used as a reference 
            to lookup media from ImageVault.
            Here we store the Id of the selected media, edits for the media and additional meta data entered by the EPiServer editor.
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceBase.Id">
            <summary>
            Get/Sets the Id of the MediaReferenceBase
            </summary>
            <value>An integer describing the id of the media from ImageVault</value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceBase.Effects">
            <summary>
            Gets the Effects of the MediaReferenceBase
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceBase.IsReadOnly">
            <summary>
            Gets the IsReadOnly of the MediaReferenceBase
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceBase.IsModified">
            <summary>
            Get/Sets the IsModified of the Media
            </summary>
            <value></value>
        </member>
        <member name="F:ImageVault.EPiServer.Common.MediaReferenceBase.MediaSerializerSettings">
            <summary>
            Gets the MediaSerializerSettings of the <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/>
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.#cctor">
            <summary>
            Initializes a new instance of the <b>MediaReferenceBase</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.#ctor">
            <summary>
            Initializes a new instance of the <b>MediaReferenceBase</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.#ctor(ImageVault.EPiServer.Common.MediaReferenceBase)">
            <summary>
            Initializes a new instance of the <b>MediaReferenceBase</b> class.
            </summary>
            <param name="mediaReferenceBase"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.ThrowIfReadyOnly">
            <summary>
            Throws an exception if the instance is readonly
            </summary>
            <exception cref="T:System.NotSupportedException">If the MediaReferenceBase is read-only.</exception>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.Clone">
            <summary>
            Clones the MediaReferenceBase to a new instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.Equals(ImageVault.EPiServer.Common.MediaReferenceBase)">
            <summary>
            Determines whether the specified <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/> is equal to the current 
            <b>MediaReferenceBase</b>.
            </summary>
            <param name="other">The <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/> to compare with the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/>.</param>
            <returns>true if the specified <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/> is equal to the current <b>MediaReferenceBase</b>;
            otherwise, false.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.ImageVault#EPiServer#Common#IReadOnlyItem{ImageVault#EPiServer#Common#MediaReferenceBase}#CreateWritableClone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
            <remarks>This clone is writeable even if the original is readonly. It is also marked as not modified</remarks>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.MakeReadOnly">
            <summary>
            Makes the instance readonly.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/>.
            </summary>
            <remarks></remarks>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/>.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.Parse``1(System.String)">
            <summary>
            Parses the supplied string and creates a matching instance
            </summary>
            <param name="value">The string representing the instance to create</param>
            <typeparam name="T">The type of instance to create</typeparam>
            <returns>The created instance</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.Parse``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses a JObject to a <see cref="T:ImageVault.EPiServer.Common.MediaReferenceBase"/> derived class.
            </summary>
            <param name="jObject">The JObjece to be parsed.</param>
            <typeparam name="T">The type of instance to create</typeparam>
            <returns></returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.MediaReferenceBase.MediaReferenceBaseContractResolver">
            <summary>
            This class is a helper class that handles which properties that should be serialized on the MediaReferenceBase instance
            </summary>
            <remarks></remarks>
            <example></example>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceBase.MediaReferenceBaseContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1">
            <summary>
            Summary description for MediaReferenceListBase.
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Count">
            <summary>
            Gets the Count of the MediaReferenceList
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Item(System.Int32)">
            <summary>
            Get/Sets the <typeparamref name="T"/> item identified by the given arguments of the MediaReferenceList
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceListBase`1.IsReadOnly">
            <summary>
            Gets the IsReadOnly of the MediaReference
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.MediaReferenceListBase`1.IsModified">
            <summary>
            Get/Sets the IsModified of the MediaReference
            </summary>
            <value></value>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.#ctor">
            <summary>
            Initializes a new instance of the <b>MediaReferenceList&lt;T&gt;</b> class.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <b>MediaReferenceList&lt;T&gt;</b> class.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <b>MediaReferenceListBase&lt;T&gt;</b> class.
            </summary>
            <param name="value">a serialized value of the list</param>
            <param name="modified">If the list should be marked as modified after adding the values to the list or not. Default is false.</param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Add(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Contains(`0)">
            <summary>
            Returns a value indicating whether the specified <typeparamref name="T"/>
             is contained in the <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>.
            </summary>
            <param name="item">The <typeparamref name="T"/> to locate in the 
            <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>.</param>
            <returns><b>true</b> if the <i>T</i> parameter is a member 
            of the <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.CopyTo(`0[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Remove(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.IndexOf(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Insert(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current 
            <b>MediaReferenceList&lt;T&gt;</b>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <b>MediaReferenceList&lt;T&gt;</b>;
            otherwise, false.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.ThrowIfReadyOnly">
            <summary>
            Throws an exception if the instance is readonly
            </summary>
            <exception cref="T:System.NotSupportedException">If the MediaReference is read-only.</exception>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.ImageVault#EPiServer#Common#IReadOnlyItem{ImageVault#EPiServer#Common#MediaReferenceListBase{T}}#CreateWritableClone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
            <remarks>This clone is writeable even if the original is readonly. It is also marked as not modified</remarks>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.MakeReadOnly">
            <summary>
            Makes the instance readonly.
            </summary>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:ImageVault.EPiServer.Common.MediaReferenceListBase`1"/>.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.ParseAndAdd(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">If unable to parse the value .</exception>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:ImageVault.EPiServer.Common.MediaReferenceListBase`1.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Pages.IvUi">
            <summary>
            Wrapper page for ImageVaultUiInsert dialog.
            This page allows cross origin inserts even with IE using postMessage
            (IE requires iframe for postMessage to work)
            http://caniuse.com/#feat=x-doc-messaging
            If it wasn't for IE, then we could have ignored this page all together...
            </summary>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Pages.IvUi.ImageVaultUiUrl">
            <summary>
            Get/Sets the ImageVaultUiUrl of the IvUi
            </summary>
            <value></value>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Pages.IvUi.TargetOrigin">
            <summary>
            Get/Sets the TargetOrigin of the IvUi
            </summary>
            <value></value>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Pages.IvUi.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Pages.IvUi.ParseRequest(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Parses the supplied queryString values and populates the instance variables based on the values in the string
            </summary>
            <param name="queryString"></param>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings">
            <summary>
            Common settings for the TinyMce plug-in in EPiServer
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.GroupName">
            <summary>
            Gets the GroupName of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.OpenIvButtonName">
            <summary>
            Gets the OpenIvButtonName of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.OpenEditorButtonName">
            <summary>
            Gets the OpenEditorButtonName of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.OpenIvButtonSortIndex">
            <summary>
            Gets the OpenIvButtonSortIndex of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.OpenEditorButtonSortIndex">
            <summary>
            Gets the OpenEditorButtonSortIndex of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.PlugInName">
            <summary>
            Gets the PlugInName of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.OpenIvButtonIconUrl">
            <summary>
            Gets the OpenIvButtonIconUrl of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.OpenEditorButtonIconUrl">
            <summary>
            Gets the OpenEditorButtonIconUrl of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="F:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings.EditorInitConfigurationOptions">
            <summary>
            Gets the EditorInitConfigurationOptions of the <see cref="T:ImageVault.EPiServer.Common.Plugins.ImageVault.TinyMceImageVaultPluginSettings"/>
            </summary>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Web.UI.Html.ControlCollectionExtensions">
            <summary>
            Extension methods for the ControlCollection class
            </summary>
            <remarks></remarks>
            <example></example>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Web.UI.Html.ControlCollectionExtensions.AddDiv(System.Web.UI.ControlCollection,System.Web.UI.Control[])">
            <summary>
            Adds a div to the control collection
            </summary>
            <param name="col">The <see cref="T:System.Web.UI.ControlCollection"/> to add the div to</param>
            <param name="controls">The <see cref="T:System.Web.UI.Control"/> array of controls to add to the div</param>
            <returns>The added div tag</returns>
        </member>
        <member name="T:ImageVault.EPiServer.Common.Web.UI.Html.HtmlLabel">
            <summary>
            An Html label
            </summary>
            <remarks></remarks>
            <example></example>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Web.UI.Html.HtmlLabel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>HtmlLabel</b> class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="P:ImageVault.EPiServer.Common.Web.UI.Html.HtmlLabel.AssociatedControl">
            <summary>
            Get/Sets the AssociatedControl of the HtmlLabel
            </summary>
            <value></value>
        </member>
        <member name="M:ImageVault.EPiServer.Common.Web.UI.Html.HtmlLabel.OnPreRender(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
    </members>
</doc>
